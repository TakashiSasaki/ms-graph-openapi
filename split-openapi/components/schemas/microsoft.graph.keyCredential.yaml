title: keyCredential
required:
  - '@odata.type'
type: object
properties:
  customKeyIdentifier:
    type: string
    description: >-
      A 40-character binary type that can be used to identify the credential.
      Optional. When not provided in the payload, defaults to the thumbprint of
      the certificate.
    format: base64url
    nullable: true
  displayName:
    type: string
    description: >-
      The friendly name for the key, with a maximum length of 90 characters.
      Longer values are accepted but shortened. Optional.
    nullable: true
  endDateTime:
    pattern: >-
      ^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$
    type: string
    description: >-
      The date and time at which the credential expires. The DateTimeOffset type
      represents date and time information using ISO 8601 format and is always
      in UTC time. For example, midnight UTC on Jan 1, 2014 is
      2014-01-01T00:00:00Z.
    format: date-time
    nullable: true
  key:
    type: string
    description: >-
      The certificate's raw data in byte array converted to Base64 string.
      Returned only on $select for a single object, that is, GET
      applications/{applicationId}?$select=keyCredentials or GET
      servicePrincipals/{servicePrincipalId}?$select=keyCredentials; otherwise,
      it's always null.  From a .cer certificate, you can read the key using the
      Convert.ToBase64String() method. For more information, see Get the
      certificate key.
    format: base64url
    nullable: true
  keyId:
    pattern: >-
      ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
    type: string
    description: The unique identifier (GUID) for the key.
    format: uuid
    nullable: true
  startDateTime:
    pattern: >-
      ^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$
    type: string
    description: >-
      The date and time at which the credential becomes valid.The Timestamp type
      represents date and time information using ISO 8601 format and is always
      in UTC time. For example, midnight UTC on Jan 1, 2014 is
      2014-01-01T00:00:00Z.
    format: date-time
    nullable: true
  type:
    type: string
    description: The type of key credential; for example, Symmetric, AsymmetricX509Cert.
    nullable: true
  usage:
    type: string
    description: >-
      A string that describes the purpose for which the key can be used; for
      example, Verify.
    nullable: true
  '@odata.type':
    type: string
